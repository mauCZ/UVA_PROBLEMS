import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;
import java.util.Collections;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.BufferedReader;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Iterator;
import java.util.Stack;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.Map;
import java.util.HashMap;
import java.util.TreeMap;
import java.util.BitSet;
import java.lang.StringBuilder;
import java.util.Queue;
import java.util.Objects;

public class UvaProblems {

	public static void main(String[] args) throws Exception {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(System.out);
		Locale.setDefault(new Locale("en", "US"));
				
		String a, fila;
		String[] b;
		String[][] matriz;
		int[][] matrizVal;
		int i, j, cont, contCiclo;
		int iniX, iniY;
		boolean terminado;
		while(!(a = in.readLine()).equals("0 0 0")) {
			b = a.split(" ");
			terminado = false;
			cont = 1;
			contCiclo = 0;
			matriz = new String[Integer.parseInt(b[0])][Integer.parseInt(b[1])];
			matrizVal = new int[Integer.parseInt(b[0])][Integer.parseInt(b[1])];
			for( i=0; i<matrizVal.length; i++) {
				for(j = 0; j<matrizVal[0].length; j++) {
					matrizVal[i][j] = 0;
				}
			}	
			for(i = 0; i<Integer.parseInt(b[0]); i++) {
				fila = in.readLine();
				rellenar(fila, matriz,i);
			}	
			iniX = 0;
			iniY = Integer.parseInt(b[2])-1;
			matrizVal[iniX][iniY] = 1;
			//out.println(matriz[iniX][iniY]+ " "+iniX+" "+iniY);
			while(!terminado) {
				if(adentro(iniX, iniY,matriz)) {
					//out.println(matriz[iniX][iniY]+" "+ + cont);
					if(matriz[iniX][iniY].equals("N")) {
						matriz[iniX][iniY] = "#";
						matrizVal[iniX][iniY] = cont;
						iniX--;
						cont++;
					}
					else if(matriz[iniX][iniY].equals("S")) {
						matriz[iniX][iniY] = "#";
						matrizVal[iniX][iniY] = cont;
						iniX++;
						cont++;
					}
					else if(matriz[iniX][iniY].equals("E")) {
						matriz[iniX][iniY] = "#";
						matrizVal[iniX][iniY] = cont;
						iniY++;
						cont++;
					}
					else if(matriz[iniX][iniY].equals("W")) {
						matriz[iniX][iniY] = "#";
						matrizVal[iniX][iniY] = cont;
						iniY--;
						cont++;
					}
					else if(matriz[iniX][iniY].equals("#")) {
						contCiclo = cont - matrizVal[iniX][iniY];
						terminado = true;
					}
				}
				else {
					terminado = true;
				}
			}
			if(contCiclo == 0) {
				out.println((cont-1) + " step(s) to exit");
			}
			else {
				out.println((cont-1-contCiclo)+" step(s) before a loop of "+contCiclo+" step(s)");
			}
		}		
		out.flush();
	}	
	public static boolean adentro(int x, int y, String[][] matriz) {
		return x>=0 && x<matriz.length && y>=0 && y<matriz[0].length;
	}
	private static void rellenar(String fila, String[][] matriz, int filita) {
		for(int k = 0; k<fila.length(); k++) {
			matriz[filita][k] = fila.charAt(k)+"";
		}	
	}			
}				

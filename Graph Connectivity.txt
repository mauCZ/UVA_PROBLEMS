#include <cstdio>
#include<bits/stdc++.h> 
using namespace std;

unordered_map<char,vector<char>> grafo;
unordered_map<char,bool> visitado;

void dfs(int origen){
    visitado[origen] = true;

    for(int i = 0; i<grafo[origen].size(); i++){
        int vecino = grafo[origen][i];
        if(visitado[vecino] == false){
            dfs(vecino);
        }
    }
}
int main()
{   
    ofstream out("output.txt");
    //ifstream in("input2.txt");
    
    int n,componentes,cont = 0;
    cin>>n;
    string blank;
    getline(cin,blank);
    string b;
    char a;
    while(n--){
        grafo.clear();
        visitado.clear();
        componentes = 0;
        cin>>a;
        cin.ignore();
        for(char c = 'A'; c<=a; c++){
            visitado[c] = false;
            grafo[c].push_back(c);
        }
        while(getline(cin,b) && !b.empty()){
            grafo[b[0]].push_back(b[1]);
            grafo[b[1]].push_back(b[0]);
        }
        for(auto it = grafo.begin(); it!=grafo.end(); it++){
            if(visitado[it->first] == false){
                dfs(it->first);
                componentes++;
            }
        }
        if(cont > 0)
            cout<<"\n";        
        cout<<componentes<<endl;
        cont++;
    }

    return 0;
}


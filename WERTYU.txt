import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;
import java.util.Collections;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.BufferedReader;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Iterator;
import java.util.Stack;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.Map;
import java.util.HashMap;
import java.util.TreeMap;
import java.util.BitSet;
import java.lang.StringBuilder;
import java.util.Queue;
import java.util.Objects;
import java.util.PriorityQueue;
public class UvaProblems {

    public static void main(String[] args) throws Exception {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        Locale.setDefault(new Locale("en", "US"));
        	
        	
        String a;
        HashMap<Character, Character> mapita = new HashMap<>();
        String teclasMalas  = "1234567890-=WERTYUIOP[]\\SDFGHJKL;'XCVBNM,./";
        String teclasBuenas = "`1234567890-QWERTYUIOP[]ASDFGHJKL;ZXCVBNM,.";
        
        for(int i = 0; i<teclasMalas.length(); i++) {
        	mapita.put(teclasMalas.charAt(i), teclasBuenas.charAt(i));
        	//out.println(teclasMalas.charAt(i)+" "+teclasBuenas.charAt(i));
        }
        /*for(char n : mapita.keySet()) {
        	out.println(n+" "+mapita.get(n));
        }*/
        StringBuilder respuesta;
        while((a = in.readLine()) != null) {
        	respuesta = new StringBuilder();
        	for(int i = 0; i<a.length(); i++) {
        		if(mapita.containsKey(a.charAt(i))) {
        			respuesta.append(mapita.get(a.charAt(i)));
        		}
        		else {
        			respuesta.append(" ");
        		}
        	}
        	out.println(respuesta);
        }
        out.flush();
    }
}

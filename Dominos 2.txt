#include <iostream>
#include <vector>
#include <fstream>
#include <algorithm>
#include <map>
#include <set>
#include <unordered_map>
#include <iomanip>
#include <math.h>
using namespace std;
 
#define pb push_back
#define f first
#define s second
#define endl '\n'
#define EPS 1e-9
#define PI acos(-1)
 
using ll = unsigned long long;
using pll = pair<ll,ll>;
using ii = pair<int,int>;
using iii = pair<pair<int,int>,int>;
using viii = vector<iii>;
using vi = vector<int>;
using vii = vector<ii>;
using vll = vector<ll>;
using ui = unsigned int;
 


void dfs(int nodo,vector<vi> &grafo, vector<bool> &control){ 
    if(control[nodo] == true) return;

    control[nodo] = true;
    for(int vecino : grafo[nodo]){
        dfs(vecino,grafo,control);
    }

}

int main() {
    ofstream out("output.txt");
    ios_base::sync_with_stdio(false);


    int t;

    cin>>t;

    while(t--){

        int n,m,l,x,y;
        cin>>n>>m>>l;
        vector<bool> control(n+1);
        vector<vi> grafo(n+1);
        for(int i =0;i<=n;i++){
            control[i] = false;
        }
        
        for(int i =0;i<m;i++){
            cin>>x>>y;
            grafo[x].pb(y);
        }
        vi inicio(l);
        for(int i =0;i<l;i++){
            cin>>inicio[i];
        }
        
        for(int ini: inicio){
            if(control[ini] == false){
                dfs(ini,grafo,control);
            }
        }
        int total = 0;
        for(int i =1;i<=n;i++){
            if(control[i]) total++;
        }
        cout<<total<<endl;
        out<<total<<endl;

    }


    return 0;
}   

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Arrays;
import java.util.Collections;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.BufferedReader;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Iterator;
import java.util.Stack;
import java.util.Set;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.Map;
import java.util.HashMap;
import java.util.TreeMap;
import java.util.BitSet;
import java.lang.StringBuilder;
import java.util.Queue;
import java.util.Objects;
import java.util.PriorityQueue;
public class UvaProblems {

    public static void main(String[] args) throws Exception {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        Locale.setDefault(new Locale("en", "US"));
        
        HashMap<String, Integer> mapa = new HashMap<>();
        int a,b,c,d,e,f;
        String abcedario = "abcdefghijklmnopqrstuvwxyz", llave;
        int cont = 1;
        for(a = 0; a<26; a++) {
        	llave = abcedario.charAt(a)+"";
        	//out.println(llave);
        	mapa.put(llave, cont++);
        }
        for(a = 0; a<25; a++) {
        	for(b = a+1; b<26; b++) {
        		llave = "";
        		llave += abcedario.charAt(a);
        		llave += abcedario.charAt(b);
        		//out.println(llave);
        		mapa.put(llave,cont++);
        	}
        }
        for(a = 0; a<24; a++) {
        	for(b = a+1; b<25; b++) {
        		for(c = b+1; c<26; c++) {
        			llave = "";
        			llave+= abcedario.charAt(a);
        			llave+= abcedario.charAt(b);
        			llave+= abcedario.charAt(c);
        			mapa.put(llave,cont++);
        		}
        	}
        }
        for(a = 0; a<23; a++) {
        	for(b = a+1; b<24; b++) {
        		for(c = b+1; c<25; c++) {
        			for(d = c+1; d<26; d++) {
	        			llave = "";
	        			llave+= abcedario.charAt(a);
	        			llave+= abcedario.charAt(b);
	        			llave+= abcedario.charAt(c);
	        			llave+= abcedario.charAt(d);
	        			mapa.put(llave,cont++);
        			}
        		}
        	}
        }
        for(a = 0; a<22; a++) {
        	for(b = a+1; b<23; b++) {
        		for(c = b+1; c<24; c++) {
        			for(d = c+1; d<25; d++) {
        				for(e = d+1; e<26; e++) {
        					llave = "";
		        			llave+= abcedario.charAt(a);
		        			llave+= abcedario.charAt(b);
		        			llave+= abcedario.charAt(c);
		        			llave+= abcedario.charAt(d);
		        			llave+= abcedario.charAt(e);
		        			mapa.put(llave, cont++);
        				}
        			}
        		}
        	}
        }
        String input;
        while((input = in.readLine())!= null) {
        	if(valido(input)) {
        		System.out.println(mapa.get(input));
        	}
        	else {
        		System.out.println("0");
        	}
        }
        out.flush();
	}
    public static boolean valido(String str) {
    	for(int i = 0; i<str.length()-1; i++) {
    		if(str.charAt(i) >= str.charAt(i+1)) {
    			return false;
    		}
    	}
    	return true;
    }
}

--------------------------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <map>
#include <unordered_map>
#include <cstdio>

using namespace std;
bool valido(string str){
    for(int i = 0; i<str.size()-1; i++){
        if(str[i] >= str[i+1])
            return false;
    }
    return true;
}
int main()
{
    map<string, int> mapita;
    string abcedario = "abcdefghijklmnopqrstuvwxyz";
    int l = abcedario.size();
    int cont = 1, a, b, c, d, e, f, g, h;
    string s1,s2,s3,s4,s5,s6, llave = "";

    for(a = 0; a<l; a++){
        llave = abcedario[a];
        //cout<<llave<<" ";
        mapita[llave] = cont++;
    }

    for(a = 0; a<l-1; a++){
        for(b = a+1; b<l; b++){
            llave = abcedario[a];
            llave += abcedario[b];
            //cout<<llave<<" ";
            mapita[llave] = cont++;
        }
    }
    for(a = 0; a<l-2; a++){
        for(b = a+1; b<l-1; b++){
            for(c = b+1; c<l; c++){
                llave = abcedario[a];
                llave += abcedario[b];
                llave += abcedario[c];
                //cout<<llave<<" ";
                printf("")
                mapita[llave] = cont++;
            }
        }
    }
    for(a = 0; a<l-3; a++){
        for(b = a+1; b<l-2; b++){
            for(c = b+1; c<l-1; c++){
                for(d = c+1; d<l; d++){
                    llave = abcedario[a];
                    llave += abcedario[b];
                    llave += abcedario[c];
                    llave += abcedario[d];
                    //cout<<llave<<" ";
                    mapita[llave] = cont++;
                }
            }
        }
    }
    for(a = 0; a<l-4; a++){
        for(b = a+1; b<l-3; b++){
            for(c = b+1; c<l-2; c++){
                for(d = c+1; d<l-1; d++){
                    for(e = d+1; e<l; e++){
                        llave = abcedario[a];
                        llave += abcedario[b];
                        llave += abcedario[c];
                        llave += abcedario[d];
                        llave += abcedario[e];
                        //cout<<llave<<" ";
                        printf()
                        mapita[llave] = cont++;
                    }
                }
            }
        }
    }

    string str;
    while(cin>>str){
        if(valido(str)){
            //cout<<"valido"<<endl;
            cout<<mapita[str]<<endl;
        }
        else{
            cout<<"0"<<endl;
        }
    }
    return 0;
}



#include <iostream>
#include <vector>
#include <fstream>
#include <algorithm>
#include <map>
#include <set>
#include <unordered_map>
#include <iomanip>
#include <math.h>
#include <queue>
#include <stack>
using namespace std;
 
#define pb push_back
#define f first
#define s second
#define endl '\n'
#define EPS 1e-9
#define PI acos(-1)
 
using ll = unsigned long long;
using pll = pair<ll,ll>;
using ii = pair<int,int>;
using iii = pair<pair<int,int>,int>;
using viii = vector<iii>;
using vi = vector<int>;
using vii = vector<ii>;
using vll = vector<ll>;
using ui = unsigned int;
	
 
 
int a[1003];
int dp[100][100];

void iniciar(){
	for(int i =0;i<100;i++){
		for(int j =0;j<100;j++){
			dp[i][j] = -1;
		}
	}
}
ll min(ll a,ll b){
	if(a < b) return a;
	return b;
}
int f(int l,int r){
	if(abs(l-r) == 1) return 0;
	if(dp[l][r] == -1){
		ll minimo = 10000000000;
		for(int i = l+1;i<r;i++){
			minimo = min(f(l,i) + f(i,r)+(a[r]-a[l]),minimo);
		}
		return dp[l][r] = minimo;
	}
	else return dp[l][r];
}
int main() {
    ofstream out("output.txt");
    ios_base::sync_with_stdio(false);
    

	int n,l	;
	while(cin>>l && l != 0){
		cin>>n;
		a[0] = 0;
		a[n+1] = l;
		for(int i = 1;i <= n; i++) cin>>a[i];

		
		iniciar();
		int res = f(0,n+1);
		cout<<"The minimum cutting is "<<res<<"."<<endl;
	}	
    return 0;
}   


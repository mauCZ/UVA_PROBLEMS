#include <iostream>
#include <vector>
#include <fstream>
#include <algorithm>
#include <map>
#include <set>
#include <unordered_map>
#include <iomanip>
#include <math.h>
#include <queue>
#include <stack>
#include <bitset>
using namespace std;
 
#define pb push_back
#define f first
#define s second
#define endl '\n'
#define EPS 1e-9
#define PI acos(-1)
 
using ll = long long;
using pll = pair<ll,ll>;
using ii = pair<ll,ll>;
using iii = pair<pair<int,int>,int>;
using viii = vector<iii>;
using vi = vector<int>;
using vii = vector<ii>;
using vll = vector<ll>;
using ui = unsigned int;
using iiii = pair<pair<int,int>,pair<int,int>>;

bool cmp(pair<ii,int> a,pair<ii,int> b){
	return a.second < b.second;
}

int padre[2200000+10];
int find_set(int a){
	return padre[a] = (padre[a]==a? a :find_set(padre[a]));
}
void union_set(int a,int b){
	int p1 = find_set(a);
	int p2 = find_set(b);
	if(p1!=p2){
		padre[p1] = p2;
	}
}


int main() {
    ofstream out("output.txt");
    ios_base::sync_with_stdio(false);
	
	int n,m;
	vector<pair<ii,int>> aristas;
	while(cin>>n>>m){
		aristas.clear();
		if(n ==0 && m ==0) break;
		int a,b,c;
		long long total =0;
		for(int i =0;i<m;i++){
			cin>>a>>b>>c;
			aristas.push_back({{a,b},c});
			total += c;
		}
		long long menos = 0;
		sort(aristas.begin(),aristas.end(),cmp);
		for(int i =0;i<n;i++){
			padre[i] = i;
		}
		pair<ii,int> act;
		for(int i =0;i<m;i++){
			act = aristas[i];
			if(find_set(act.first.first) != find_set(act.first.second)){
				menos += act.second;
				union_set(act.first.first,act.first.second);
			}
		}
		cout<<total-menos<<endl;
	}
	
    return 0;
}   




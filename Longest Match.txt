#include <cstdio>
#include <iostream>
#include <vector>
#include <fstream>
#include <string>
#include <map>
#include <math.h>
#include <algorithm>
#include <set>
#include <queue>
#include <unordered_map>
#define pb          push_back 
#define endl        "\n"
#define mostrar(x,y) cout<<x<<" "<<y<<endl;
#define f           first
#define s           second
#define mod         1000000007
using namespace std;
typedef pair<int,int> ii;
typedef pair<pair<int,int>,int> iii;
typedef vector<int> vi;
typedef vector<pair<int,int>> vii;

int dp[200][200];
vector<string> cad1,cad2;

void iniciarlizar(){
    for(int i = 0; i<200; i++){
        for(int j = 0; j<200; j++){
            dp[i][j] = -1;
        }
    }
}

int LCS(int a,int b){
    int res = 0;
    if(a == -1) res = 0;
    else if(b == -1) res = 0;

    else if(cad1[a] == cad2[b]){
        if(dp[a][b] == -1){
            res = LCS(a-1,b-1)+1;
            dp[a][b] = res;
        }
        else{
            res = dp[a][b];
        }
    }
    else{
        if(dp[a][b] == -1){
            res = max(LCS(a,b-1),LCS(a-1,b));
            dp[a][b] = res;
        }
        else{
            res = dp[a][b];
        }
    }
    return res;
}

int main(){
    ofstream out("output.txt");

    ios::sync_with_stdio(0);cin.tie(0);
    set<char> c;
    string c1 = "abcdefghijklmnopqrstuwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";

    for(int i = 0; i<c1.size(); i++){
        c.insert(c1[i]);
    }
    
    int minimo ;
    string a,b;
    string aux;
    int cont = 1;
    while(getline(cin,a) /*&& a != "agg"*/){
        getline(cin,b);

        if(a.size() == 0 || b.size() == 0){
            if(cont<10){
                cout<<" "<<cont<<". Blank!\n";
            }
            else{
                cout<<cont<<". Blank!\n";
            }
            
            cont++;         
            continue;
        }
        iniciarlizar();
        aux = "";
        for(int i = 0; i<a.size(); i++){
            if(c.find(a[i]) == c.end()){
                if(aux.size()>0) 
                    cad1.pb(aux);
                aux = "";
            }
            else    aux += a[i];
        }
        if(aux.size()>0) cad1.pb(aux);
        aux = "";
        for(int i = 0; i<b.size(); i++){
            if(c.find(b[i]) == c.end()){
                if(aux.size()>0)
                    cad2.pb(aux);
                aux = "";
            }
            else  aux += b[i];
        }
        if(aux.size()>0) cad2.pb(aux);
        aux = "";
        minimo = LCS(cad1.size()-1,cad2.size()-1);
        if(cont<10){    
            cout<<" "<<cont<<". Length of longest match: "<<minimo<<endl;
        }
        else{
            cout<<cont<<". Length of longest match: "<<minimo<<endl;
        }

        cad1.clear();
        cad2.clear();
        cont++;
    }



    return 0;
}






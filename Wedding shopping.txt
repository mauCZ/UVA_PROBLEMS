#include <iostream>
#include <vector>
#include <fstream>
#include <algorithm>
#include <map>
#include <set>
#include <unordered_map>
#include <iomanip>
#include <math.h>
#include <queue>
#include <stack>
using namespace std;
 
#define pb push_back
#define f first
#define s second
#define endl '\n'
#define EPS 1e-9
#define PI acos(-1)
 
using ll = long long;
using pll = pair<ll,ll>;
using ii = pair<ll,ll>;
using iii = pair<pair<int,int>,int>;
using viii = vector<iii>;
using vi = vector<int>;
using vii = vector<ii>;
using vll = vector<ll>;
using ui = unsigned int;
 
int cant[30];
vi precios[30];
int memo[250][30];
int m,c;

void iniciar(){
	for(int i =0;i<250;i++){
		for(int j =0;j<30;j++) memo[i][j] = -1;
	}
}

int dp(int dinero,int g){
	//if(dinero == 0) return 0;
	if(g == 0) return m-dinero;
	if(memo[dinero][g] == -1){
		int ans = -1;
		for(int i =0;i<cant[g];i++){
			if(dinero >= precios[g][i]){
				ans = max(ans,dp(dinero-precios[g][i],g-1));
			}
		}
		return memo[dinero][g] = ans;
	}
	else return memo[dinero][g];
}
 
int main() {
    ofstream out("output.txt");
    ios_base::sync_with_stdio(false);
    
    int n;
    cin>>n;
    while(n--){
		iniciar();
		cin>>m>>c;
		for(int i =1;i<=c;i++){
			precios[i].clear();
		}
		for(int i =1;i<=c;i++){
			int x,costo;
			cin>>x;
			cant[i] = x;
			for(int j =1;j<=x;j++){
				cin>>costo;
				precios[i].pb(costo);
			}
		}
		int res = dp(m,c);
		if(res < 0){cout<<"no solution"<<endl;out<<"no solution"<<endl;} 
		else {cout<<res<<endl; out<<res<<endl;}
	}
    
    return 0;
}   

